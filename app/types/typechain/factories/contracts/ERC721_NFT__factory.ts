/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  ERC721_NFT,
  ERC721_NFTInterface,
} from "../../contracts/ERC721_NFT";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d5338038062001d538339810160408190526200003491620002de565b6040805180820182526007815266135bd8dad3919560ca1b60208083019182528351808501909452600384526213519560ea1b9084015281519192916200007e9160009162000222565b5080516200009490600190602084019062000222565b505050620000b1620000ab620000eb60201b60201c565b620000ef565b8051620000c690600890602084019062000222565b506001600160a01b0382163314620000e357620000e38262000141565b50506200041a565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200014b620001c4565b6001600160a01b038116620001b65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620001c181620000ef565b50565b6007546001600160a01b03163314620002205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620001ad565b565b8280546200023090620003de565b90600052602060002090601f0160209004810192826200025457600085556200029f565b82601f106200026f57805160ff19168380011785556200029f565b828001600101855582156200029f579182015b828111156200029f57825182559160200191906001019062000282565b50620002ad929150620002b1565b5090565b5b80821115620002ad5760008155600101620002b2565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215620002f257600080fd5b82516001600160a01b03811681146200030a57600080fd5b602084810151919350906001600160401b03808211156200032a57600080fd5b818601915086601f8301126200033f57600080fd5b815181811115620003545762000354620002c8565b604051601f8201601f19908116603f011681019083821181831017156200037f576200037f620002c8565b8160405282815289868487010111156200039857600080fd5b600093505b82841015620003bc57848401860151818501870152928501926200039d565b82841115620003ce5760008684830101525b8096505050505050509250929050565b600181811c90821680620003f357607f821691505b6020821081036200041457634e487b7160e01b600052602260045260246000fd5b50919050565b611929806200042a6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b88d4fde11610081578063cd279c7c11610066578063cd279c7c14610274578063e985e9c514610287578063f2fde38b146102c357600080fd5b8063b88d4fde1461024e578063c87b56dd1461026157600080fd5b80638da5cb5b1461021a57806395d89b411461022b5780639abc832014610233578063a22cb4651461023b57600080fd5b806323b872dd116101095780636352211e116100ee5780636352211e146101de57806370a08231146101f1578063715018a61461021257600080fd5b806323b872dd146101b857806342842e0e146101cb57600080fd5b806301ffc9a71461013b57806306fdde0314610163578063081812fc14610178578063095ea7b3146101a3575b600080fd5b61014e610149366004611488565b6102d6565b60405190151581526020015b60405180910390f35b61016b610328565b60405161015a91906114fd565b61018b610186366004611510565b6103ba565b6040516001600160a01b03909116815260200161015a565b6101b66101b1366004611545565b6103e1565b005b6101b66101c636600461156f565b6104fb565b6101b66101d936600461156f565b610573565b61018b6101ec366004611510565b61058e565b6102046101ff3660046115ab565b6105f3565b60405190815260200161015a565b6101b661068d565b6007546001600160a01b031661018b565b61016b6106a1565b61016b6106b0565b6101b66102493660046115c6565b61073e565b6101b661025c36600461168e565b61074d565b61016b61026f366004611510565b6107cc565b6101b661028236600461170a565b6107d7565b61014e610295366004611775565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b66102d13660046115ab565b6107f3565b60006001600160e01b031982166380ac58cd60e01b148061030757506001600160e01b03198216635b5e139f60e01b145b8061032257506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610337906117a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610363906117a8565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b5050505050905090565b60006103c582610883565b506000908152600460205260409020546001600160a01b031690565b60006103ec8261058e565b9050806001600160a01b0316836001600160a01b03160361045e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061047a575061047a8133610295565b6104ec5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610455565b6104f683836108e7565b505050565b6105053382610955565b6105685760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610455565b6104f68383836109d4565b6104f68383836040518060200160405280600081525061074d565b6000818152600260205260408120546001600160a01b0316806103225760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610455565b60006001600160a01b0382166106715760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610455565b506001600160a01b031660009081526003602052604090205490565b610695610b88565b61069f6000610be2565b565b606060018054610337906117a8565b600880546106bd906117a8565b80601f01602080910402602001604051908101604052809291908181526020018280546106e9906117a8565b80156107365780601f1061070b57610100808354040283529160200191610736565b820191906000526020600020905b81548152906001019060200180831161071957829003601f168201915b505050505081565b610749338383610c34565b5050565b6107573383610955565b6107ba5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610455565b6107c684848484610d02565b50505050565b606061032282610d80565b6107df610b88565b6107e98383610e7b565b6104f68282610e95565b6107fb610b88565b6001600160a01b0381166108775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610455565b61088081610be2565b50565b6000818152600260205260409020546001600160a01b03166108805760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610455565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061091c8261058e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806109618361058e565b9050806001600160a01b0316846001600160a01b031614806109a857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109cc5750836001600160a01b03166109c1846103ba565b6001600160a01b0316145b949350505050565b826001600160a01b03166109e78261058e565b6001600160a01b031614610a635760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610455565b6001600160a01b038216610ac55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610455565b610ad06000826108e7565b6001600160a01b0383166000908152600360205260408120805460019290610af99084906117f8565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b2790849061180f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b0316331461069f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610455565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610c955760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610455565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d0d8484846109d4565b610d1984848484610f3e565b6107c65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610455565b6060610d8b82610883565b60008281526006602052604081208054610da4906117a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd0906117a8565b8015610e1d5780601f10610df257610100808354040283529160200191610e1d565b820191906000526020600020905b815481529060010190602001808311610e0057829003601f168201915b505050505090506000610e2e61108a565b90508051600003610e40575092915050565b815115610e72578082604051602001610e5a929190611827565b60405160208183030381529060405292505050919050565b6109cc84611099565b610749828260405180602001604052806000815250611100565b6000828152600260205260409020546001600160a01b0316610f1f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610455565b600082815260066020908152604090912082516104f6928401906113d9565b60006001600160a01b0384163b1561107f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f82903390899088908890600401611856565b6020604051808303816000875af1925050508015610fbd575060408051601f3d908101601f19168201909252610fba91810190611892565b60015b611065573d808015610feb576040519150601f19603f3d011682016040523d82523d6000602084013e610ff0565b606091505b50805160000361105d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610455565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109cc565b506001949350505050565b606060088054610337906117a8565b60606110a482610883565b60006110ae61108a565b905060008151116110ce57604051806020016040528060008152506110f9565b806110d88461117e565b6040516020016110e9929190611827565b6040516020818303038152906040525b9392505050565b61110a8383611297565b6111176000848484610f3e565b6104f65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610455565b6060816000036111a55750506040805180820190915260018152600360fc1b602082015290565b8160005b81156111cf57806111b9816118af565b91506111c89050600a836118de565b91506111a9565b60008167ffffffffffffffff8111156111ea576111ea611602565b6040519080825280601f01601f191660200182016040528015611214576020820181803683370190505b5090505b84156109cc576112296001836117f8565b9150611236600a866118f2565b61124190603061180f565b60f81b81838151811061125657611256611906565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611290600a866118de565b9450611218565b6001600160a01b0382166112ed5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610455565b6000818152600260205260409020546001600160a01b0316156113525760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610455565b6001600160a01b038216600090815260036020526040812080546001929061137b90849061180f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546113e5906117a8565b90600052602060002090601f016020900481019282611407576000855561144d565b82601f1061142057805160ff191683800117855561144d565b8280016001018555821561144d579182015b8281111561144d578251825591602001919060010190611432565b5061145992915061145d565b5090565b5b80821115611459576000815560010161145e565b6001600160e01b03198116811461088057600080fd5b60006020828403121561149a57600080fd5b81356110f981611472565b60005b838110156114c05781810151838201526020016114a8565b838111156107c65750506000910152565b600081518084526114e98160208601602086016114a5565b601f01601f19169290920160200192915050565b6020815260006110f960208301846114d1565b60006020828403121561152257600080fd5b5035919050565b80356001600160a01b038116811461154057600080fd5b919050565b6000806040838503121561155857600080fd5b61156183611529565b946020939093013593505050565b60008060006060848603121561158457600080fd5b61158d84611529565b925061159b60208501611529565b9150604084013590509250925092565b6000602082840312156115bd57600080fd5b6110f982611529565b600080604083850312156115d957600080fd5b6115e283611529565b9150602083013580151581146115f757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561163357611633611602565b604051601f8501601f19908116603f0116810190828211818310171561165b5761165b611602565b8160405280935085815286868601111561167457600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156116a457600080fd5b6116ad85611529565b93506116bb60208601611529565b925060408501359150606085013567ffffffffffffffff8111156116de57600080fd5b8501601f810187136116ef57600080fd5b6116fe87823560208401611618565b91505092959194509250565b60008060006060848603121561171f57600080fd5b61172884611529565b925060208401359150604084013567ffffffffffffffff81111561174b57600080fd5b8401601f8101861361175c57600080fd5b61176b86823560208401611618565b9150509250925092565b6000806040838503121561178857600080fd5b61179183611529565b915061179f60208401611529565b90509250929050565b600181811c908216806117bc57607f821691505b6020821081036117dc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561180a5761180a6117e2565b500390565b60008219821115611822576118226117e2565b500190565b600083516118398184602088016114a5565b83519083019061184d8183602088016114a5565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261188860808301846114d1565b9695505050505050565b6000602082840312156118a457600080fd5b81516110f981611472565b6000600182016118c1576118c16117e2565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118ed576118ed6118c8565b500490565b600082611901576119016118c8565b500690565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080d000a";

type ERC721_NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721_NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721_NFT__factory extends ContractFactory {
  constructor(...args: ERC721_NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721_NFT> {
    return super.deploy(
      _owner,
      _baseUri,
      overrides || {}
    ) as Promise<ERC721_NFT>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _baseUri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _baseUri, overrides || {});
  }
  override attach(address: string): ERC721_NFT {
    return super.attach(address) as ERC721_NFT;
  }
  override connect(signer: Signer): ERC721_NFT__factory {
    return super.connect(signer) as ERC721_NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721_NFTInterface {
    return new utils.Interface(_abi) as ERC721_NFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721_NFT {
    return new Contract(address, _abi, signerOrProvider) as ERC721_NFT;
  }
}
